// Generated by CoffeeScript 1.4.0
var TrendImage,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  // HTML for the trend image handle

TrendImage = (function() {

  function TrendImage(options) {
    this.requestTrend = __bind(this.requestTrend, this);
	
    this.launchDialog = __bind(this.launchDialog, this);

    this.reSort = __bind(this.reSort, this);

    this.generateTrendImage = __bind(this.generateTrendImage, this);

    this.setupFishEye = __bind(this.setupFishEye, this);
	
	this.onSelected = __bind(this.onSelected,this);
	
	this.onMouse = __bind(this.onMouse, this);
	
    this.key = __bind(this.key, this);
	
    this.done === false;
    this.click = false;
    this.fisheye = false;
    this.img = null;
    this.lensSize = 10;
    this.defaultWidth = 3855;
    this.wWidth = window.innerWidth;
    this.wHeight = window.innerHeight;
	
	this.currDiv = null;
	
	this.tab = $("#trend_tab");
    this.ids = options.ids;
	
	this.objid = null;
	this.specid = null;
	
	this.ind = options.ind;
	
    this.launchDialog(this.ids);
    
	return;
  }

  TrendImage.prototype.key = function(evt) {
    var charCode, charStr, img;
    charCode = evt.which;
    charStr = String.fromCharCode(charCode);
	
    switch (charStr) { 
      case "l":
        if (this.lensSize > 0) {
          this.lensSize -= 1.0;
          this.gl.uniform1f(this.shaderProgram.lensUniform, this.lensSize);
          this.myGL.render();
        }
        break;
      case "k":
        this.lensSize += 1.0;
        this.gl.uniform1f(this.shaderProgram.lensUniform, this.lensSize);
        this.myGL.render();
        break;
      case "f":
        if (!this.fisheye) {
          this.fisheye = true;
		  
		  $(this.currDiv).find("#hCanvas").hide();
		  $(this.currDiv).find("#glCanvas").show();
		  
           img = $(this.currDiv).find("#hCanvas").getCanvasImage();
           this.myGL.copyImage(img);

        } else {
          this.fisheye = false;
          
		   $(this.currDiv).find("#glCanvas").hide();
  		   $(this.currDiv).find("#hCanvas").show();
		}
		break;
    }
  };

  TrendImage.prototype.setCanvas = function(width, height, canvas) {
    
	canvas.width = width;
    canvas.height = height;
  };

  TrendImage.prototype.onMouse = function(x, y){
	  	  
      if (this.fisheye == true && this.click) {
        this.gl.uniform2fv( this.shaderProgram.mouseUniform, [x, y] );
        this.myGL.render();
	}
  };
  
  TrendImage.prototype.onSelected = function(){
			
	var __this = this;
	var by = $(__this.currDiv).find('#canvasDiv #attrChanger').find(":selected").val();
	var table = $(__this.currDiv).find('#canvasDiv').find(".trend_table")[0];
	var rowCount = table.rows.length;
	
	if( by == "Diff"){
		
		var row = table.insertRow(rowCount-1);
		row.id = "color";
		
				
		var cell0 = row.insertCell(0);
		var cell1 = row.insertCell(1);
		var cell2 = row.insertCell(2);
				
		cell0.innerHTML = "<br/>\
		<select id='diff_val1'> \
			<option value='S.U_MAG'>U_MAG</option> \
			<option value='S.G_MAG'>G_MAG</option> \
			<option value='S.R_MAG'>R_MAG</option> \
			<option value='S.I_MAG'>I_MAG</option> \
			<option value='S.Z_MAG'>Z_MAG</option> \
		</select><br/><br/>";
		
		cell1.innerHTML = "<br/><img src='./lib/trend/images/minus.png'width='40px'><br/><br/>"
		cell2.innerHTML  = "<br/>\
		<select id='diff_val2'> \
			<option value='S.U_MAG'>U_MAG</option> \
			<option value='S.G_MAG' selected='selected'>G_MAG</option> \
			<option value='S.R_MAG'>R_MAG</option> \
			<option value='S.I_MAG'>I_MAG</option> \
			<option value='S.Z_MAG'>Z_MAG</option> \
		</select><br/><br/>";
		
	}else if(table.rows[rowCount-2].id == "color"){
				
		table.deleteRow(rowCount-2);	
	}
  };

  TrendImage.prototype.setupFishEye = function() {
    var textureCoords;
    this.textureCoordBuffer = this.gl.createBuffer();
    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.textureCoordBuffer);
    textureCoords = [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0];
    this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(textureCoords), this.gl.STATIC_DRAW);
    this.gl.vertexAttribPointer(this.shaderProgram.textureCoordAttribute, 2, this.gl.FLOAT, false, 0, 0);
    this.myGL.bindPos();
    this.gl.uniform1f(this.shaderProgram.lensUniform, this.lensSize);
  };

  TrendImage.prototype.generateTrendImage = function(lines, width, wt) {
    var sorting_table, image, line, src, __this, _i, _len;
    __this = this;
    for (_i = 0, _len = lines.length; _i < _len; _i++) {
      line = lines[_i];
	  if(wt == "rest"){
    	  $(".images").append(src = "" + __this.time_id + "/rest/" + line,
	  	 	"<img src='lib/trend/php/getLine.php?url=" + src + "' id='" + line + "'  width='" + width + "' height='" + 1 + "' >");
	  }else{
    	  $(".images").append(src = "" + __this.time_id + "/obs/" + line,
	  	 	"<img src='lib/trend/php/getLine.php?url=" + src + "' id='" + line + "'  width='" + width + "' height='" + 1 + "' >");
	  }
	  image = new Image();
      image.myY = _i;
      image.myName = this.specid[_i];
      image.onload = function() {
		var loadImage = function(layer) {
			var link, url;
			url = "http://cas.sdss.org/dr7/en/get/specById.asp?id=";
			url += layer.name;
			link = "http://cas.sdss.org/dr7/en/get/specById.asp?id=";
			link += __this.objid[layer.index];
			$(__this.currDiv).find("#plot_img").attr("src", "" + url);
            $(__this.currDiv).find("#plot_img").parent().attr("href", "" + url);
			$(__this.currDiv).find("#plot_img").attr("height", "" + __this.plotDim);
			$(__this.currDiv).find("#plot_img").attr("width", "" + (__this.plotDim + 100));
		};
	    $(__this.currDiv).find("div").children().eq(1).drawImage({
		  layer: true,
          group: "trendLines",
          name: this.myName,
          source: this,
          x: 0,
          y: this.myY,
          width: width,
          height: 1,
          fromCenter: false,
          cursor: "arrow",
          mouseover: function(layer) {
			if(!$(this).parent().find(".trendFreezeButton").is(":checked")) {
			  loadImage(layer);
			}
		  },
          click: function(layer) {
			  $(this).parent().find('.trendFreezeButton').attr("checked", "checked");
			  loadImage(layer);
	      },
		  mousedown: function(layer) {
			  
		  }
        });
      };
      image.src = document.getElementById("" + line).src;
    }
    this.done = true;
	
	// remove the progress bar
	$("#trend_image_content #tab1 #progressbar").remove();
    $("#trend_image_content #tab1 .ui-progressbar").remove();
	
	var canvasWidth = Math.max($(this.currDiv).find("#hCanvas").width(), $(this.currDiv).find("#gCanvas").width());
	$(this.currDiv).find("#canvasDiv").append('<p class="trendYAxis">Objects</p>');
    $(this.currDiv).find(".trendYAxis").css("top", __this.height);
    var trendXAxisHeight = 0;
    var sortTableMargin = 15;
    console.log(wt);
    if(wt == "observed") {
        console.log("in the if");
        trendXAxisHeight = 60;
        $(this.currDiv).find("#canvasDiv").append('<p class="trendXAxis"><svg preserveAspectRatio="none" height="' + trendXAxisHeight + '" width="' + canvasWidth + '" viewBox="0 0 1060 60"><g transform="translate(30,0)"><line x1="0" y1="10" x2="1000" y2="10" stroke="black" stroke-width="1"/><!-- notches --><line x1="0" y1="0" x2="0" y2="10" stroke="black" stroke-width="1" /><text x="0" y="25" text-anchor="middle">4000</text><line x1="200" y1="0" x2="200" y2="10" stroke="black" stroke-width="1" /><text x="200" y="25" text-anchor="middle">5000</text><line x1="400" y1="0" x2="400" y2="10" stroke="black" stroke-width="1" /><text x="400" y="25" text-anchor="middle">6000</text><line x1="600" y1="0" x2="600" y2="10" stroke="black" stroke-width="1" /><text x="600" y="25" text-anchor="middle">7000</text><line x1="800" y1="0" x2="800" y2="10" stroke="black" stroke-width="1" /><text x="800" y="25" text-anchor="middle">8000</text><line x1="1000" y1="0" x2="1000" y2="10" stroke="black" stroke-width="1" /><text x="1000" y="25" text-anchor="middle">9000</text><text x="500" y="50" text-anchor="middle">Wavelength [Ã…]</text>Sorry, your browser does not support inline SVG.</g></svg> </p>');
    }
    $(this.currDiv).find("#canvasDiv").append('<label class="trendFreezeLabel"><input type="checkbox" class="trendFreezeButton"/>Image selection frozen</label>');
    $(".trendFreezeLabel").css("top", __this.height + trendXAxisHeight + 17);
    
	
	
	sorting_table = "<table id='sort_table' class='trend_table'> \
		<tr> \
			<td rowspan='4'> \
				<a href='http://cas.sdss.org/dr7/en/get/specById.asp?id=" + this.specid[0] + "' target='_blank'>\
					<img id='plot_img' height='" + this.plotDim + "' width='" + (this.plotDim + 100) + "' style='border:none;' \
						src='http://cas.sdss.org/dr7/en/get/specById.asp?id=" + this.specid[0] + "'/> \
				</a>\
			</td> \
			<td> \
			<b>Sort By:</b> <br/> \
			<select id='attrChanger' name='"+ this.ind +"' onChange='TrendImages[this.name].onSelected();'> \
				<option value='S.REDSHIFT'>Redshift</option> \
				<option value='S.U_MAG'>U_MAG</option> \
				<option value='S.G_MAG'>G_MAG</option> \
				<option value='S.R_MAG'>R_MAG</option> \
				<option value='S.I_MAG'>I_MAG</option> \
				<option value='S.Z_MAG'>Z_MAG</option> \
				<option value='Diff'>Color</option> \
			</select> \
			</td> \
			<td> <b> Order: </b> </br> \
			<select id='orderChanger'> \
				<option value='DESC'>Asc.</option> \
				<option value='ASC'>Desc.</option> \
			</select> \
			</td> \
		</tr> \
		<tr> \
			<td colspan='2'> \
				<button type='button' id='sortButton' style='display:block; width:100%;' \
				 	 name='" + this.ind + "' onClick='TrendImages[this.name].reSort();'> Sort!</button> \
			</td> \
		</tr> \
	</table>";
	$(this.currDiv).find("#canvasDiv").append(sorting_table);
    $("#sort_table").css("margin-top", sortTableMargin + "px");
	$(this.currDiv).append('<br/><br/><a href="#" class ="toggleTrend">Hide/Show</a>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#" class="removeTrend">Remove from the list</a>&nbsp;&nbsp;&nbsp;&nbsp;<br/><br/>');	
  };

  TrendImage.prototype.reSort = function() {
    
	  var by = $(this.currDiv).find("#canvasDiv #attrChanger :selected").val();
	  	  
	  if(by == "Diff"){
	  	
	  	 var first = $(this.currDiv).find('#canvasDiv #diff_val1').val();
	  	 var second =  $(this.currDiv).find('#canvasDiv #diff_val2').val();
		 
	   by = "(" + first + " - " + second + ")";
		
	  }
	  
	  var jsonString = JSON.stringify(this.objid);
	  __this = this;
	  var order = $(this.currDiv).find('#canvasDiv #orderChanger :selected').val();
	  
	  $.ajax({
 		type: "POST",
 		url: "lib/trend/php/TrendImage.php",
 		data: {
 			id: jsonString,
			granularity: 0,
 			by: by,
 			order: order,
 			funct: "reSort",
	        left: "",
	        right: "",
			wavetype: ""
 		},
 		cache: false,
 		dataType: "json",
 		success: function(json) {  
 
			// new location array
 			__this.specid = json[0];
			
			// loop over each lines, changing it's location to the new order 
			$(__this.currDiv).find('#hCanvas').animateLayerGroup("trendLines", {
			      y: function(layer) {
					  
					  // new location as returned above
					  var new_loc =  __this.specid.indexOf(layer.name);
					  
					return Math.abs(new_loc);
			      }
			    }, 1000);
				
			img = $(__this.currDiv).find("#hCanvas").getCanvasImage();
			__this.myGL.copyImage(img);
 		},
        error: function(jqXHR, statusMSG, error) {
			// something went horribly wrong here
            console.log(jqXHR.responseText);
 		}
	});
  };
  TrendImage.prototype.launchDialog = function(id) {
    var $dialog, __this;
    __this = this;
	
    $dialog = $("#new_trend_dialog");
    var mDialog = "<table id='trend_table' class='trend_table'>\
	<tbody class='trend_table'> <tr> \
		<td> <b>Order By:</b> <br/> \
		<select id='attr'> \
			<option value='S.REDSHIFT'>Redshift</option>  \
			<option value='S.U_MAG'>U_MAG</option> \
			<option value='S.G_MAG'>G_MAG</option> \
			<option value='S.R_MAG'>R_MAG</option> \
			<option value='S.I_MAG'>I_MAG</option> \
			<option value='S.Z_MAG'>Z_MAG</option> \
			<option value='Diff'>Color</option> \
		</select> </td> \
		<td> <b> Order: </b> </br> \
		<select id='order'> \
			<option value='DESC'>Asc.</option> \
			<option value='ASC'>Desc.</option> \
		</select> </td> \
		<td> <b> Wavelenght: </b> </br> \
		<select id='wavetype'> \
			<option value='observed'>Obs.</option> \
			<option value='rest'>Rest</option> \
		</select> \
		</td> \
		</br> \
		<td><b>Angstroms/pixel</b> \
		<input id='gran' type='number' name='quantity' value='2.5' min='1.0' max='10'> </td> \
		<td> <br/> </td> \
	</tr> \
	<tr id='diff_changer' colspan='2'> \
		<td><br/><br/></td>\
		<td><br/><br/></td>\
		<td><br/><br/></td>\
		<td><br/><br/></td>\
	</tr> \
	<tr> \
		<td> <b>Upper Bound (Short Wave.):</b> </td> \
		<td> <input class='simple_color_left' value='#0000FF'/> </td> \
		<td style='vertical-align:center;'> <b>Lower Bound (Long Wave.):</b> </td> \
		<td> <input class='simple_color_right' value='#FF0000''/> </td> \
		<td> <br/> </td> \
	</tr> </tbody> </table>";

    $dialog.empty();
    $dialog.html(mDialog);
	
	$dialog.find('#attr').change(
		function(){
			if( $(this).val() == "Diff"){
				var row = document.getElementById("diff_changer");
				
				var cell0 = row.cells[0];
				var cell1 = row.cells[1];
				var cell2 = row.cells[2];
				
				cell0.innerHTML = "<br/>\
				<select id='diff_val1'> \
					<option value='S.U_MAG'>U_MAG</option> \
					<option value='S.G_MAG'>G_MAG</option> \
					<option value='S.R_MAG'>R_MAG</option> \
					<option value='S.I_MAG'>I_MAG</option> \
					<option value='S.Z_MAG'>Z_MAG</option> \
				</select><br/><br/>";
				
				cell1.innerHTML = "<br/><img src='./lib/trend/images/minus.png'width='40px'><br/><br/>"
				cell2.innerHTML  = "<br/>\
				<select id='diff_val2'> \
					<option value='S.U_MAG'>U_MAG</option> \
					<option value='S.G_MAG' selected='selected'>G_MAG</option> \
					<option value='S.R_MAG'>R_MAG</option> \
					<option value='S.I_MAG'>I_MAG</option> \
					<option value='S.Z_MAG'>Z_MAG</option> \
				</select><br/><br/>";
				
			}else{
				var row = document.getElementById("diff_changer");
				
				row.innerHTML = "\
				<td><br/><br/></td>\
				<td><br/><br/></td>\
				<td><br/><br/></td>\
				<td><br/><br/></td>"
			}
		}
	);
	
	$('.simple_color_left', $dialog).simpleColor({
      boxWidth: 40,
      cellWidth: 10,
      cellHeight: 12
    });
    $('.simple_color_right', $dialog).simpleColor({
      boxWidth: 40,
      cellWidth: 10,
      cellHeight: 12
    });
	
    return $dialog.dialog({
      autoOpen: true,
      draggable: true,
      resizable: false,
      width: 420,
      height: 250,
      title: "Trend Image Properties",
      buttons: {
        "Create": function(e) {
          var color_left, color_left1, color_right, color_right1, gran, order, by, wavetype,
            _this = this;
          e.preventDefault();
          color_left = $('.simple_color_left', $dialog).val();
          color_right = $('.simple_color_right', $dialog).val();
          color_left1 = color_left.replace(/\#/g, "");
          color_right1 = color_right.replace(/\#/g, "");
          order = document.getElementById("order").value;
          gran = document.getElementById("gran").value;
          by = document.getElementById("attr").value;
          wavetype = document.getElementById("wavetype").value;
          
		  if(by == "Diff"){

			   var first = document.getElementById("diff_val1").value;
			   var second = document.getElementById("diff_val2").value;
			
			   by = "(" + first + " - " + second + ")";
		  }
		  
		  __this.requestTrend(id, color_left1, color_right1, order, by, gran, wavetype);
          $(this).dialog("close");
          setTimeout(function() {
            return $("#trend_handle").trigger("click");
          }, 500);
        },
        "Cancel": function(e) {
          e.preventDefault();
          $(this).dialog("close");
        }
      }
    });
  };

  TrendImage.prototype.requestTrend = function(id, color_left, color_right, order, by, gran, wt) {
    var IN, depth, h, i, inc, jObject, jsonString, lastVal, progressBar, slide, _i, _len,
      _this = this; 
	
    jObject = {};
    for (_i = 0, _len = id.length; _i < _len; _i++) {
      i = id[_i];
      jObject["" + _i] = i;
    }
    jsonString = JSON.stringify(jObject);
    	
	// reset the trend image handle html
	//$("#trend_image_content").empty();	
	//$("#trend_image_content").append(__handle);
	
	this.newWidth = 0;
    if (this.width < (this.wWidth - 50)) {
      this.newWidth = this.defaultWidth * 0.75;
    } else {
      this.newWidth = this.wWidth * 0.75;
    }
    this.tab.css("width", "" + this.newWidth + "px");
    h = $("#object_tab").css("width");
    depth = $("#object_tab").css("right");
    IN = this.newWidth;
    slide = parseInt(IN) - (parseInt(h.split("px")[0]) + parseInt(depth.split("px")[0]));
    this.tab.css("right", "-" + slide + "px");
    
	// progress bar for when loading the images
	progressBar = "<div id='progressbar' class='ui-progressbar ui-widget ui-widget-content ui-corner-all' role='progressbar'><div class='progress-label'>Loading...</div> </div> ";
    $("#trend_image_content #tab1").append(progressBar);
    
	lastVal = -1;
    inc = 0;
    
  	this.currDiv = $("#trend_image_content #tab1 div:nth-last-of-type(2)")[0];
	
	$(function() {
	
		var progressbar = $("#trend_image_content #tab1 #progressbar"),
	    progressLabel = $("#trend_image_content #tab1 .progress-label");
		  		  
	    progressbar.progressbar({
			value: false,
			change: function() {  
				progressLabel.text( progressbar.progressbar( "value" ) + "%" );
			},
			complete: function() {
				progressLabel.text( "Transfering Images!");
			}
	    });

	    function progress() {
	        var val = progressbar.progressbar( "value" ) || 0;	
			progressbar.progressbar("value", val + Math.floor(100*(100/id.length)));
													
	      	if(val < 99) {
	        	setTimeout(progress, 2100);
	     	}
	    }
		setTimeout( progress, 100 );
	  });
	  
    $.ajax({
      type: "POST",
      url: "lib/trend/php/TrendImage.php",
      data: {
        granularity: gran,
        id: jsonString,
		by: by, 
        order: order,
        funct: "constructFromResults",
        left: color_left,
        right: color_right,
		wavetype: wt
      },
      cache: false,
      dataType: "json",
      success: function(json) {
        var attr, obj;

        _this.lines = json[0];
        _this.objid = json[1];
        _this.specid = json[2];
		
        _this.coords = json[3];
        _this.width = json[4];
        _this.height = json[5];
        _this.time_id = json[6];
        order = $("#order").val();
        attr = $("#attr").val();
        
		_this.plotDim = 400;

		_this.setCanvas( $("#trend_image_content #tab1").width() - 40, _this.height, $(_this.currDiv).find("#hCanvas")[0] ) ;
		_this.setCanvas( $("#trend_image_content #tab1").width() - 40, _this.height, $(_this.currDiv).find("#glCanvas")[0] ) ;
	    
		// mouse down 
		 $(_this.currDiv).find("#glCanvas").mousedown( function(event){
			_this.click = true;
		 });
		 // mouse up
		 $(_this.currDiv).find("#glCanvas").mouseup( function(event){
			_this.click = false;
		 });
		
		 $(_this.currDiv).find("#glCanvas").mousemove( function(event){
			_this.onMouse(event.offsetX, _this.height - event.offsetY);	
		 });
		 
		_this.myGL = new WebGL({
		          canvas: $(_this.currDiv).find("#glCanvas")[0]
		        });
		
        obj = _this.myGL.getContext();
        _this.gl = obj.gl;
        _this.shaderProgram = obj.shader;
        _this.setupFishEye();
        _this.generateTrendImage(_this.lines, _this.newWidth, wt);

		// glcanvas
		$(_this.currDiv).find("#glCanvas").hide();
		// hcanvas
		$(_this.currDiv).find("#hCanvas").show();
	  },
      error: function(jqXHR, statusMSG, error) {
          console.log(jqXHR.responseText);			
		  $("#results_content #tab1 div:last").append('<a href="#" class="thumbnail">Thumbnails</a>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#" class="trendImage">Trend Image</a>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#" class="storage">Store Result</a><br/>');

		  // empty trend image elements
		  $("#trend_image_content #tab1 div:last-child").parent().find("#progressbar").remove();
		  $("#trend_image_content #tab1 div:last").remove();
		  $("#trend_image_content #tab1 div:last").append('<p><label class="search_object_label"><b>Search Results Do Not Contain Spectra: <a href="#" class="checkQuery">Check Query</a> </b> </label>');
      }
    });
  };

  return TrendImage;

})();
