// Generated by CoffeeScript 1.3.3
(function() {
  var ImageSet;

  ImageSet = (function() {

    function ImageSet() {
      this.images = {};
      this.keys = [];
      this.minimum = void 0;
      this.maximum = void 0;
      this.count = 0;
    }

    ImageSet.prototype.getExtremes = function() {
      var data, extremes, image, key, maximums, minimums, _ref;
      minimums = [];
      maximums = [];
      _ref = this.images;
      for (key in _ref) {
        image = _ref[key];
        data = image.getHDU().data;
        data.getFrame();
        extremes = data.getExtremes();
        minimums.push(extremes[0]);
        maximums.push(extremes[1]);
      }
      this.minimum = Math.min.apply(Math, minimums);
      return this.maximum = Math.max.apply(Math, maximums);
    };

    ImageSet.prototype.addImage = function(image) {
      var filter, index;
      filter = image.getHDU().header["FILTER"] || this.count;
      this.keys.push(filter);
      this.images[filter] = image;
      index = this.count;
      this.__defineGetter__(index, function() {
        return this.images[this.keys[index]];
      });
      return this.count += 1;
    };

    ImageSet.prototype.getWidth = function() {
      var key;
      key = this.keys[0];
      if (this.images[key] == null) {
        return null;
      }
      return this.images[key].getHDU().header["NAXIS1"];
    };

    ImageSet.prototype.getHeight = function() {
      var key;
      key = this.keys[0];
      if (this.images[key] == null) {
        return null;
      }
      return this.images[key].getHDU().header["NAXIS2"];
    };

    ImageSet.prototype.getCount = function() {
      return this.count;
    };

    ImageSet.prototype.getData = function(filter) {
      return this[filter].getHDU().data.data;
    };

    ImageSet.prototype.seek = function(frame) {
      var image, key, _ref, _results;
      if (frame == null) {
        frame = 0;
      }
      _ref = this.images;
      _results = [];
      for (key in _ref) {
        image = _ref[key];
        _results.push(image.getDataUnit().seek(frame));
      }
      return _results;
    };

    return ImageSet;

  })();

  if (typeof module !== "undefined" && module !== null) {
    module.exports = ImageSet;
  }

}).call(this);
